'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var rollupPluginutils = require('rollup-pluginutils');
var uglifycss = require('uglifycss');
var path = require('path');
var stringToTemplateLiteral = _interopDefault(require('string-to-template-literal'));

function transform(css, specifier, tag) {
    return `import {${tag}} from '${specifier}';export default ${tag}${stringToTemplateLiteral(css)}`;
}
/**
 * Imports css as lit-element `css`-tagged constructible style sheets.
 */
function css(options = {}) {
    const { exclude, include = /\.css$/i, uglify = false, import: specifier = 'lit-element', tag = 'css', } = options;
    const filter = rollupPluginutils.createFilter(include, exclude);
    return {
        name: 'lit-css',
        load(id) {
            if (filter(id))
                this.addWatchFile(path.resolve(id));
            return null;
        },
        transform(css, id) {
            if (id.slice(-4) !== '.css')
                return null;
            if (!filter(id))
                return null;
            const uglifyOptions = typeof uglify === 'object' ? uglify : undefined;
            const cssContent = !uglify ? css : uglifycss.processString(css, uglifyOptions);
            const code = transform(cssContent, specifier, tag);
            return { code, map: { mappings: '' } };
        },
    };
}

module.exports = css;
